/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.ConLogStockPrecio;
import controlador.ConProducto;
import controlador.ConTrabajador;
import db.Conexion;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import modelo.LogStockPrecio;
import modelo.Producto;
import modelo.Trabajador;

/**
 *
 * @author alfon
 */
public class EditarStockPrecio extends javax.swing.JFrame {

    public String codigo = "";
    public static final Conexion CONEXION = new Conexion();
    public Producto productoGlobal = new Producto();

    
    public EditarStockPrecio() {
        initComponents();
        Image icon = Toolkit.getDefaultToolkit().getImage("src\\img\\coffee-heart-original.png");  
        this.setIconImage(icon);
        this.setTitle("Pili's Coffee POS Software | Aumentar Stock/Editar precio");
        limpiarCampos();
        
        chk_precio.setEnabled(false);
        chk_stock.setEnabled(false);
        btn_guardarCerrar.setEnabled(false);
        btn_guardarContinuar.setEnabled(false);
        cb_Trabajador.setEnabled(false);
        
        ConTrabajador cTrabajador = new ConTrabajador();        
        ArrayList<Trabajador> listaTrabajadores = cTrabajador.listarTrabajadores();
        for(Trabajador t: listaTrabajadores){
            cb_Trabajador.addItem(t.getId_trabajador()+" - "+t.getNombre());
        }
        
        
        
        
        
    }
    Thread t = new Thread(new Runnable() {
        @Override
        public void run() {
            ConProducto cProducto = new ConProducto();
            boolean actualizacion = cProducto.actualizarProducto(productoGlobal);    
            if(actualizacion){                    
                int id_trabajador = Integer.parseInt(cb_Trabajador.getSelectedItem().toString().split(" - ")[0]);
                String codigo_barra = codigo;
                int stock_antiguo = Integer.parseInt(txt_stockActual.getText());

                int stock_agregado = 0;
                if(!txt_nuevoStock.getText().equals("")){
                    stock_agregado = Integer.parseInt(txt_nuevoStock.getText());
                }

                int precio_antiguo = Integer.parseInt(txt_precioActual.getText().replace("$", "").replace(".", ""));
                int precio_nuevo = precio_antiguo;
                if(!txt_nuevoPrecio.getText().equals("")){
                    precio_nuevo = Integer.parseInt(txt_nuevoPrecio.getText().replace("$", "").replace(".", ""));
                }

                LogStockPrecio log = new LogStockPrecio(id_trabajador, codigo, stock_antiguo, stock_agregado, precio_antiguo, precio_nuevo);
                ConLogStockPrecio cLog = new ConLogStockPrecio();
                cLog.RegistrarLog(log);
                
            }
            else{
                JOptionPane.showMessageDialog(null, "Hubo un problema y no se pudo realizar la actualizacion","Operacion fallida",JOptionPane.ERROR_MESSAGE);
                habilitarCampos();
            }    
            
        }
    });

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txt_codigoProducto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_nombreProducto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_precioActual = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_stockActual = new javax.swing.JTextField();
        chk_precio = new javax.swing.JCheckBox();
        chk_stock = new javax.swing.JCheckBox();
        lbl_nuevoPrecio = new javax.swing.JLabel();
        txt_nuevoPrecio = new javax.swing.JTextField();
        lbl_nuevoStock = new javax.swing.JLabel();
        txt_nuevoStock = new javax.swing.JTextField();
        btn_buscar = new javax.swing.JButton();
        btn_confirmarDatos = new javax.swing.JButton();
        cb_Trabajador = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btn_guardarCerrar = new javax.swing.JButton();
        btn_guardarContinuar = new javax.swing.JButton();
        btn_limpiar = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(224, 177, 203));

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        jLabel1.setText("Aumentar stock/ Editar precio");

        jPanel2.setBackground(new java.awt.Color(224, 177, 203));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txt_codigoProducto.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Codigo del producto");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Nombre del producto");

        txt_nombreProducto.setEditable(false);
        txt_nombreProducto.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Precio Actual");

        txt_precioActual.setEditable(false);
        txt_precioActual.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Stock Actual");

        txt_stockActual.setEditable(false);
        txt_stockActual.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N

        chk_precio.setBackground(new java.awt.Color(224, 177, 203));
        chk_precio.setText("Actualizar");
        chk_precio.setEnabled(false);
        chk_precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_precioActionPerformed(evt);
            }
        });

        chk_stock.setBackground(new java.awt.Color(224, 177, 203));
        chk_stock.setText("Actualizar");
        chk_stock.setEnabled(false);
        chk_stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_stockActionPerformed(evt);
            }
        });

        lbl_nuevoPrecio.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_nuevoPrecio.setText("Nuevo precio");

        txt_nuevoPrecio.setEditable(false);
        txt_nuevoPrecio.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        txt_nuevoPrecio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_nuevoPrecioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_nuevoPrecioFocusLost(evt);
            }
        });
        txt_nuevoPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nuevoPrecioKeyTyped(evt);
            }
        });

        lbl_nuevoStock.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_nuevoStock.setText("Stock a agregar");

        txt_nuevoStock.setEditable(false);
        txt_nuevoStock.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        txt_nuevoStock.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_nuevoStockFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_nuevoStockFocusLost(evt);
            }
        });
        txt_nuevoStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nuevoStockKeyTyped(evt);
            }
        });

        btn_buscar.setBackground(new java.awt.Color(94, 84, 142));
        btn_buscar.setForeground(new java.awt.Color(255, 255, 255));
        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search2.png"))); // NOI18N
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        btn_confirmarDatos.setBackground(new java.awt.Color(94, 84, 142));
        btn_confirmarDatos.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_confirmarDatos.setForeground(new java.awt.Color(255, 255, 255));
        btn_confirmarDatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/confirm.png"))); // NOI18N
        btn_confirmarDatos.setText("Confirmar informacion");
        btn_confirmarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmarDatosActionPerformed(evt);
            }
        });

        cb_Trabajador.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("¿Quien modifica?");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_confirmarDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_nombreProducto)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txt_codigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_buscar))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                            .addComponent(txt_precioActual))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chk_precio))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txt_stockActual, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chk_stock)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl_nuevoStock)
                                    .addComponent(lbl_nuevoPrecio)
                                    .addComponent(txt_nuevoPrecio, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(txt_nuevoStock, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_Trabajador, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_codigoProducto)
                    .addComponent(btn_buscar, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_nombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chk_precio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_precioActual, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chk_stock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_stockActual, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbl_nuevoPrecio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_nuevoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(lbl_nuevoStock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_nuevoStock, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cb_Trabajador)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_confirmarDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btn_guardarCerrar.setBackground(new java.awt.Color(94, 84, 142));
        btn_guardarCerrar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_guardarCerrar.setForeground(new java.awt.Color(255, 255, 255));
        btn_guardarCerrar.setText("Guardar y cerrar");
        btn_guardarCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarCerrarActionPerformed(evt);
            }
        });

        btn_guardarContinuar.setBackground(new java.awt.Color(94, 84, 142));
        btn_guardarContinuar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_guardarContinuar.setForeground(new java.awt.Color(255, 255, 255));
        btn_guardarContinuar.setText("Guardar y editar otro");
        btn_guardarContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarContinuarActionPerformed(evt);
            }
        });

        btn_limpiar.setBackground(new java.awt.Color(94, 84, 142));
        btn_limpiar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_limpiar.setForeground(new java.awt.Color(255, 255, 255));
        btn_limpiar.setText("Limpiar campos");
        btn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarActionPerformed(evt);
            }
        });

        btn_salir.setBackground(new java.awt.Color(94, 84, 142));
        btn_salir.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_salir.setForeground(new java.awt.Color(255, 255, 255));
        btn_salir.setText("Salir sin guardar");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                        .addGap(96, 96, 96))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_limpiar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_guardarContinuar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_guardarCerrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(btn_guardarCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_guardarContinuar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(btn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(192, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btn_limpiarActionPerformed

    private void btn_guardarCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarCerrarActionPerformed
        
        ConProducto cProducto = new ConProducto();
        Producto p = productoGlobal;
        int nuevoPrecio,nuevoStock;
        boolean continuar = true;
        String mensajeError = "";
        //validar precios
        if(!txt_nuevoPrecio.getText().equals("")){
            nuevoPrecio = Integer.parseInt(txt_nuevoPrecio.getText().replace(".", "").replace("$", ""));
            if(nuevoPrecio>0){
                try {
                    p.setPrecio(nuevoPrecio);
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                    mensajeError = e.getMessage();                     
                    continuar = false;
                }
            }  
            else{
                mensajeError = "El precio no puede ser menor o igual a 0";
                continuar = false;
            }
        }
        
        if(!txt_nuevoStock.getText().equals("")){
            nuevoStock = Integer.parseInt(txt_nuevoStock.getText());
            if(nuevoStock > 0){
                try {
                    p.setStock(nuevoStock + p.getStock());
                } catch (Exception e) {
                    mensajeError = e.getMessage();                    
                    continuar = false;
                }
            }
            else{
                mensajeError = "El stock a agregar debe ser mayor a 0";
                continuar = false; 
            }
        }
        
        if(txt_nuevoStock.getText().equals("") && txt_nuevoPrecio.getText().equals("")){
            continuar = false;
            mensajeError = "No hay datos modificados";
        }
        
        if(continuar){
            if(CONEXION.isNetworkOnline()){
               t.start();
               this.dispose();
            }
            else JOptionPane.showMessageDialog(this, "No hay acceso al servidor en estos momentos, no se puede comunicar con la base de datos, vuelva a intentarlo cuando tenga una conexion a internet", "Actualizacion fallida", JOptionPane.WARNING_MESSAGE);  


        }
        else{
            JOptionPane.showMessageDialog(this, mensajeError,"Operacion fallida", JOptionPane.ERROR_MESSAGE);
            habilitarCampos();
        }
        
        
    }//GEN-LAST:event_btn_guardarCerrarActionPerformed

    private void habilitarCampos(){
        txt_codigoProducto.setText(codigo);
        btn_guardarCerrar.setEnabled(false);
        btn_guardarContinuar.setEnabled(false);
        txt_codigoProducto.setEditable(true);
        chk_precio.setEnabled(true);
        chk_stock.setEnabled(true);
        txt_nuevoPrecio.setEditable(true);
        txt_nuevoStock.setEditable(true);
        btn_buscar.setEnabled(true);
        btn_limpiar.setEnabled(true);
        btn_confirmarDatos.setEnabled(true);
        cb_Trabajador.setEnabled(true);
    }
    
    private void btn_guardarContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarContinuarActionPerformed
        ConProducto cProducto = new ConProducto();
        Producto p = productoGlobal;
        int nuevoPrecio,nuevoStock;
        boolean continuar = true;
        String mensajeError = "";
        //validar precios
        if(!txt_nuevoPrecio.getText().equals("")){
            nuevoPrecio = Integer.parseInt(txt_nuevoPrecio.getText().replace(".", "").replace("$", ""));
            if(nuevoPrecio>0){
                try {
                    p.setPrecio(nuevoPrecio);
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                    mensajeError = e.getMessage();                     
                    continuar = false;
                }
            }  
            else{
                mensajeError = "El precio no puede ser menor o igual a 0";
                continuar = false;
            }
        }
        
        if(!txt_nuevoStock.getText().equals("")){
            nuevoStock = Integer.parseInt(txt_nuevoStock.getText());
            if(nuevoStock > 0){
                try {
                    p.setStock(nuevoStock + p.getStock());
                } catch (Exception e) {
                    mensajeError = e.getMessage();                    
                    continuar = false;
                }
            }
            else{
                mensajeError = "El stock a agregar debe ser mayor a 0";
                continuar = false; 
            }
        }
        
        if(txt_nuevoStock.getText().equals("") && txt_nuevoPrecio.getText().equals("")){
            continuar = false;
            mensajeError = "No hay datos modificados";
        }
        
        if(continuar){
            if(CONEXION.isNetworkOnline()){
                productoGlobal = p;
                t.start();
                limpiarCampos();
                codigo = "";
                habilitarCampos();
            }
            else JOptionPane.showMessageDialog(this, "No hay acceso al servidor en estos momentos, no se puede comunicar con la base de datos, vuelva a intentarlo cuando tenga una conexion a internet", "Actualizacion fallida", JOptionPane.WARNING_MESSAGE);  


        }
        else{
            JOptionPane.showMessageDialog(this, mensajeError,"Operacion fallida", JOptionPane.ERROR_MESSAGE);
            habilitarCampos();
        }
    }//GEN-LAST:event_btn_guardarContinuarActionPerformed

    
    private void chk_precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_precioActionPerformed
        if(chk_precio.isSelected()){
            txt_nuevoPrecio.setEditable(true);
            txt_nuevoPrecio.setText(txt_precioActual.getText());
        }
        else{
            txt_nuevoPrecio.setEditable(false);
            txt_nuevoPrecio.setText("");
        }
    }//GEN-LAST:event_chk_precioActionPerformed

    private void txt_nuevoPrecioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nuevoPrecioFocusGained
        if(!txt_nuevoPrecio.getText().equals("") && txt_nuevoPrecio.isEditable()){
            txt_nuevoPrecio.setText("");
        }
    }//GEN-LAST:event_txt_nuevoPrecioFocusGained

    private void txt_nuevoPrecioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nuevoPrecioFocusLost
        if(txt_nuevoPrecio.getText().equals("") && txt_nuevoPrecio.isEditable()){
            txt_nuevoPrecio.setText(txt_precioActual.getText());
        }
        else{
            try{
                String valor = txt_nuevoPrecio.getText().replace("$", "").replace(".", "");
                txt_nuevoPrecio.setText(String.format("$%,d",Integer.valueOf(valor)));  
            }
            catch(Exception e){
                
            }

        }
    }//GEN-LAST:event_txt_nuevoPrecioFocusLost

    private void txt_nuevoPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nuevoPrecioKeyTyped
        onlyNumberField(evt);
    }//GEN-LAST:event_txt_nuevoPrecioKeyTyped

    private void txt_nuevoStockFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nuevoStockFocusGained
        if(!txt_nuevoStock.getText().equals("") && txt_nuevoStock.isEditable()){
            txt_nuevoStock.setText("");
        }
    }//GEN-LAST:event_txt_nuevoStockFocusGained

    private void txt_nuevoStockFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nuevoStockFocusLost
        if(txt_nuevoStock.getText().equals("") && txt_nuevoStock.isEditable()){
            txt_nuevoStock.setText(txt_stockActual.getText());
        }        
    }//GEN-LAST:event_txt_nuevoStockFocusLost

    private void txt_nuevoStockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nuevoStockKeyTyped
        onlyNumberField(evt);
    }//GEN-LAST:event_txt_nuevoStockKeyTyped

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        ConProducto cProducto = new ConProducto();
        Producto p = cProducto.obtenerProducto(txt_codigoProducto.getText());
        productoGlobal = p;
        if(!p.getNombre().equals("")){
            chk_precio.setSelected(false);
            txt_nuevoPrecio.setEditable(false);
            txt_nuevoPrecio.setText("");
            chk_stock.setSelected(false);
            txt_nuevoStock.setEditable(false);
            txt_nuevoStock.setText("");
            cb_Trabajador.setEnabled(true);


            txt_nombreProducto.setText(p.getNombre());
            
            txt_precioActual.setText(String.valueOf(p.getPrecio()));
            if(txt_precioActual.getText().equals("")) txt_precioActual.setText("$0");
            else{
                String valor = txt_precioActual.getText().replace("$", "").replace(".", "");
                txt_precioActual.setText(String.format("$%,d",Integer.valueOf(valor)));
            }
            txt_stockActual.setText(String.valueOf(p.getStock()));
            chk_precio.setEnabled(true);
            chk_stock.setEnabled(true);
            codigo = txt_codigoProducto.getText();
        }
        else{
            codigo = txt_codigoProducto.getText();
            limpiarCampos();
            txt_codigoProducto.setText(codigo);
            JOptionPane.showMessageDialog(this, "No existe un producto asociado al codigo "+codigo,"Error obteniendo producto",JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void chk_stockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_stockActionPerformed
        if(chk_stock.isSelected()){
            txt_nuevoStock.setEditable(true);
            txt_nuevoStock.setText(txt_stockActual.getText());
        }
        else{
            txt_nuevoStock.setEditable(false);
            txt_nuevoStock.setText("");
        }
    }//GEN-LAST:event_chk_stockActionPerformed

    private void btn_confirmarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_confirmarDatosActionPerformed
        if(codigo.length()>0 && txt_nombreProducto.getText().length()>0 && txt_precioActual.getText().length()>0 && txt_stockActual.getText().length()>0){
            txt_codigoProducto.setText(codigo);
            btn_guardarCerrar.setEnabled(true);
            btn_guardarContinuar.setEnabled(true);
            txt_codigoProducto.setEditable(false);
            chk_precio.setEnabled(false);
            chk_stock.setEnabled(false);
            txt_nuevoPrecio.setEditable(false);
            txt_nuevoStock.setEditable(false);
            btn_buscar.setEnabled(false);
            btn_limpiar.setEnabled(false);
            btn_confirmarDatos.setEnabled(false);
            cb_Trabajador.setEnabled(false);
            
            
        }
        else{
            JOptionPane.showMessageDialog(this, "No hay un producto cargado para editar","Error con datos de producto",JOptionPane.ERROR_MESSAGE);
        }

        
        
    }//GEN-LAST:event_btn_confirmarDatosActionPerformed
    
    private void onlyNumberField(java.awt.event.KeyEvent evt){
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }
    

    private void limpiarCampos(){
        txt_codigoProducto.setText("");
        txt_nombreProducto.setText("");
        txt_precioActual.setText("");
        txt_stockActual.setText("");
        chk_precio.setSelected(false);
        txt_nuevoPrecio.setEditable(false);
        txt_nuevoPrecio.setText("");
        chk_stock.setSelected(false);
        txt_nuevoStock.setEditable(false);
        txt_nuevoStock.setText("");
        
        chk_precio.setEnabled(false);
        chk_stock.setEnabled(false);
        cb_Trabajador.setEnabled(false);
                
    }
    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarStockPrecio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarStockPrecio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarStockPrecio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarStockPrecio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarStockPrecio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_confirmarDatos;
    private javax.swing.JButton btn_guardarCerrar;
    private javax.swing.JButton btn_guardarContinuar;
    private javax.swing.JButton btn_limpiar;
    private javax.swing.JButton btn_salir;
    private javax.swing.JComboBox<String> cb_Trabajador;
    private javax.swing.JCheckBox chk_precio;
    private javax.swing.JCheckBox chk_stock;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbl_nuevoPrecio;
    private javax.swing.JLabel lbl_nuevoStock;
    private javax.swing.JTextField txt_codigoProducto;
    private javax.swing.JTextField txt_nombreProducto;
    private javax.swing.JTextField txt_nuevoPrecio;
    private javax.swing.JTextField txt_nuevoStock;
    private javax.swing.JTextField txt_precioActual;
    private javax.swing.JTextField txt_stockActual;
    // End of variables declaration//GEN-END:variables
}
