package vista;

import controlador.ConColores;
import controlador.ConLogStockPrecio;
import controlador.ConProducto;
import controlador.ConTrabajador;
import db.Conexion;
import java.awt.Color;
import java.awt.Frame;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import modelo.LogStockPrecio;
import modelo.PaletaColor;
import modelo.Producto;
import modelo.Trabajador;

/**
 *
 * @author alfon
 */
public class EditarStockPrecio extends javax.swing.JFrame {

    public String codigo = "";
    public Producto productoGlobal = new Producto();
    public String stockActual = "";
    public String precioAntiguo = "";
    public String nombreProducto = "";
    private boolean disabled_buttons;

    private static final ConColores cColor = new ConColores();  
    JFrame mainWindow;
    int xMouse, yMouse; 
    PaletaColor paleta = cColor.paletaActiva();    
    //COLORES    
    Color BackgroundColor = paleta.getBackground();
    Color PanelColor = paleta.getPanel();
    Color mouseEnterPanelColor = paleta.getMouseEnter();
    Color mouseExitPanelColor = PanelColor;
    Color mouseClickPanelColor = paleta.getMouseClick();
    Color textColor = mouseEnterPanelColor;          
    
    
    
    public EditarStockPrecio() {
            initComponents();
            Image icon = Toolkit.getDefaultToolkit().getImage("src\\img\\coffee-heart-original.png");  
            this.setIconImage(icon);
            this.setTitle("Aumentar Stock/Editar precio");
            limpiarCampos();

            chk_precio.setEnabled(false);
            chk_stock.setEnabled(false);

            cb_Trabajador.setEnabled(false);

            ConTrabajador cTrabajador = new ConTrabajador();        
            ArrayList<Trabajador> listaTrabajadores = cTrabajador.listarTrabajadores();
            for(Trabajador t: listaTrabajadores){
                cb_Trabajador.addItem(t.getId_trabajador()+" - "+t.getNombre());
            }            
            BackGround.setBackground(BackgroundColor);
            PanelDetalle.setBackground(BackgroundColor);
            chk_precio.setBackground(BackgroundColor);
            chk_stock.setBackground(BackgroundColor);
            lbl_codigoProducto.setForeground(textColor);
            lbl_nombreProducto.setForeground(textColor);
            lbl_nuevoPrecio.setForeground(textColor);
            lbl_nuevoStock.setForeground(textColor);
            lbl_precioActual.setForeground(textColor);
            lbl_quienModifica.setForeground(textColor);
            lbl_stockActual.setForeground(textColor);
            txt_titulo.setForeground(textColor);
            chk_precio.setForeground(textColor);
            chk_stock.setForeground(textColor);
            cb_Trabajador.setForeground(textColor);
            btn_confirmarInformacion.setBackground(PanelColor);
            ClosePanel.setBackground(BackgroundColor);
            MinPanel.setBackground(BackgroundColor);        
            btn_buscarProducto.setBackground(PanelColor);
            
    }
    
    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackGround = new javax.swing.JPanel();
        PanelDetalle = new javax.swing.JPanel();
        txt_codigoProducto = new javax.swing.JTextField();
        lbl_codigoProducto = new javax.swing.JLabel();
        lbl_nombreProducto = new javax.swing.JLabel();
        txt_nombreProducto = new javax.swing.JTextField();
        lbl_precioActual = new javax.swing.JLabel();
        txt_precioActual = new javax.swing.JTextField();
        lbl_stockActual = new javax.swing.JLabel();
        txt_stockActual = new javax.swing.JTextField();
        chk_precio = new javax.swing.JCheckBox();
        chk_stock = new javax.swing.JCheckBox();
        lbl_nuevoPrecio = new javax.swing.JLabel();
        txt_nuevoPrecio = new javax.swing.JTextField();
        lbl_nuevoStock = new javax.swing.JLabel();
        txt_nuevoStock = new javax.swing.JTextField();
        cb_Trabajador = new javax.swing.JComboBox<>();
        lbl_quienModifica = new javax.swing.JLabel();
        btn_confirmarInformacion = new javax.swing.JPanel();
        txt_confirmarInformacion = new javax.swing.JLabel();
        btn_buscarProducto = new javax.swing.JPanel();
        txt_buscarProducto = new javax.swing.JLabel();
        btn_guardar_Cerrar = new javax.swing.JLabel();
        btn_guardar_continuar = new javax.swing.JLabel();
        btn_limpiartodo = new javax.swing.JLabel();
        btn_salir = new javax.swing.JLabel();
        txt_titulo = new javax.swing.JLabel();
        ClosePanel = new javax.swing.JPanel();
        txt_close = new javax.swing.JLabel();
        MinPanel = new javax.swing.JPanel();
        txt_minimize = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        BackGround.setBackground(new java.awt.Color(230, 204, 178));
        BackGround.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BackGround.setPreferredSize(new java.awt.Dimension(810, 680));
        BackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelDetalle.setBackground(new java.awt.Color(230, 204, 178));
        PanelDetalle.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        PanelDetalle.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_codigoProducto.setFont(new java.awt.Font("Roboto Thin", 0, 20)); // NOI18N
        txt_codigoProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codigoProductoActionPerformed(evt);
            }
        });
        PanelDetalle.add(txt_codigoProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 340, 38));

        lbl_codigoProducto.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        lbl_codigoProducto.setForeground(new java.awt.Color(127, 85, 57));
        lbl_codigoProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/barcode.png"))); // NOI18N
        lbl_codigoProducto.setText("CÃ“DIGO DEL PRODUCTO");
        PanelDetalle.add(lbl_codigoProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 373, 38));

        lbl_nombreProducto.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        lbl_nombreProducto.setForeground(new java.awt.Color(127, 85, 57));
        lbl_nombreProducto.setText("NOMBRE DEL PRODUCTO");
        PanelDetalle.add(lbl_nombreProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 428, 40));

        txt_nombreProducto.setEditable(false);
        txt_nombreProducto.setFont(new java.awt.Font("Roboto Thin", 0, 20)); // NOI18N
        PanelDetalle.add(txt_nombreProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 460, 39));

        lbl_precioActual.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        lbl_precioActual.setForeground(new java.awt.Color(127, 85, 57));
        lbl_precioActual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pricetag.png"))); // NOI18N
        lbl_precioActual.setText("PRECIO ACTUAL");
        PanelDetalle.add(lbl_precioActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 170, 40));

        txt_precioActual.setEditable(false);
        txt_precioActual.setFont(new java.awt.Font("Roboto Thin", 0, 20)); // NOI18N
        PanelDetalle.add(txt_precioActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 170, 38));

        lbl_stockActual.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        lbl_stockActual.setForeground(new java.awt.Color(127, 85, 57));
        lbl_stockActual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/stock.png"))); // NOI18N
        lbl_stockActual.setText("STOCK ACTUAL");
        PanelDetalle.add(lbl_stockActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 170, 37));

        txt_stockActual.setEditable(false);
        txt_stockActual.setFont(new java.awt.Font("Roboto Thin", 0, 20)); // NOI18N
        PanelDetalle.add(txt_stockActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 170, 38));

        chk_precio.setBackground(new java.awt.Color(230, 204, 178));
        chk_precio.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        chk_precio.setForeground(new java.awt.Color(127, 85, 57));
        chk_precio.setText("Actualizar");
        chk_precio.setEnabled(false);
        chk_precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_precioActionPerformed(evt);
            }
        });
        PanelDetalle.add(chk_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, -1, 38));

        chk_stock.setBackground(new java.awt.Color(230, 204, 178));
        chk_stock.setFont(new java.awt.Font("Roboto", 0, 11)); // NOI18N
        chk_stock.setForeground(new java.awt.Color(127, 85, 57));
        chk_stock.setText("Actualizar");
        chk_stock.setEnabled(false);
        chk_stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_stockActionPerformed(evt);
            }
        });
        PanelDetalle.add(chk_stock, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, -1, 38));

        lbl_nuevoPrecio.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        lbl_nuevoPrecio.setForeground(new java.awt.Color(127, 85, 57));
        lbl_nuevoPrecio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pricetag.png"))); // NOI18N
        lbl_nuevoPrecio.setText("NUEVO PRECIO");
        PanelDetalle.add(lbl_nuevoPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 210, 160, 40));

        txt_nuevoPrecio.setEditable(false);
        txt_nuevoPrecio.setFont(new java.awt.Font("Roboto Thin", 0, 20)); // NOI18N
        txt_nuevoPrecio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_nuevoPrecioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_nuevoPrecioFocusLost(evt);
            }
        });
        txt_nuevoPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nuevoPrecioKeyTyped(evt);
            }
        });
        PanelDetalle.add(txt_nuevoPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 250, 170, 38));

        lbl_nuevoStock.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        lbl_nuevoStock.setForeground(new java.awt.Color(127, 85, 57));
        lbl_nuevoStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add.png"))); // NOI18N
        lbl_nuevoStock.setText("SUMAR STOCK");
        lbl_nuevoStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_nuevoStockMouseEntered(evt);
            }
        });
        PanelDetalle.add(lbl_nuevoStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 320, 160, 37));

        txt_nuevoStock.setEditable(false);
        txt_nuevoStock.setFont(new java.awt.Font("Roboto Thin", 0, 20)); // NOI18N
        txt_nuevoStock.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_nuevoStockFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_nuevoStockFocusLost(evt);
            }
        });
        txt_nuevoStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nuevoStockKeyTyped(evt);
            }
        });
        PanelDetalle.add(txt_nuevoStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 360, 170, 38));

        cb_Trabajador.setFont(new java.awt.Font("Roboto Thin", 0, 18)); // NOI18N
        cb_Trabajador.setForeground(new java.awt.Color(127, 85, 57));
        PanelDetalle.add(cb_Trabajador, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 465, 202, 37));

        lbl_quienModifica.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        lbl_quienModifica.setForeground(new java.awt.Color(127, 85, 57));
        lbl_quienModifica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/user.png"))); // NOI18N
        lbl_quienModifica.setText("Â¿QUIÃ‰N MODIFICA?");
        PanelDetalle.add(lbl_quienModifica, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 202, 32));

        txt_confirmarInformacion.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        txt_confirmarInformacion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_confirmarInformacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/confirm.png"))); // NOI18N
        txt_confirmarInformacion.setText("CONFIRMAR INFORMACIÃ“N");
        txt_confirmarInformacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txt_confirmarInformacionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txt_confirmarInformacionMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txt_confirmarInformacionMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txt_confirmarInformacionMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout btn_confirmarInformacionLayout = new javax.swing.GroupLayout(btn_confirmarInformacion);
        btn_confirmarInformacion.setLayout(btn_confirmarInformacionLayout);
        btn_confirmarInformacionLayout.setHorizontalGroup(
            btn_confirmarInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_confirmarInformacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        btn_confirmarInformacionLayout.setVerticalGroup(
            btn_confirmarInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_confirmarInformacion, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        PanelDetalle.add(btn_confirmarInformacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 430, -1));

        btn_buscarProducto.setPreferredSize(new java.awt.Dimension(100, 38));

        txt_buscarProducto.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txt_buscarProducto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_buscarProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search2.png"))); // NOI18N
        txt_buscarProducto.setText("BUSCAR");
        txt_buscarProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txt_buscarProductoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txt_buscarProductoMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txt_buscarProductoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txt_buscarProductoMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout btn_buscarProductoLayout = new javax.swing.GroupLayout(btn_buscarProducto);
        btn_buscarProducto.setLayout(btn_buscarProductoLayout);
        btn_buscarProductoLayout.setHorizontalGroup(
            btn_buscarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_buscarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        btn_buscarProductoLayout.setVerticalGroup(
            btn_buscarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_buscarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        PanelDetalle.add(btn_buscarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, -1, -1));

        BackGround.add(PanelDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 480, 610));

        btn_guardar_Cerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/custom buttons/guardarycerrar_solid.png"))); // NOI18N
        btn_guardar_Cerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_guardar_CerrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_guardar_CerrarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_guardar_CerrarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_guardar_CerrarMouseReleased(evt);
            }
        });
        BackGround.add(btn_guardar_Cerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 96, -1, -1));

        btn_guardar_continuar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/custom buttons/guardaryotro_solid.png"))); // NOI18N
        btn_guardar_continuar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_guardar_continuarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_guardar_continuarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_guardar_continuarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_guardar_continuarMouseReleased(evt);
            }
        });
        BackGround.add(btn_guardar_continuar, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 174, -1, -1));

        btn_limpiartodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/custom buttons/limpiar_solid.png"))); // NOI18N
        btn_limpiartodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_limpiartodoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_limpiartodoMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_limpiartodoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_limpiartodoMouseReleased(evt);
            }
        });
        BackGround.add(btn_limpiartodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 252, -1, -1));

        btn_salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/custom buttons/salir_solid.png"))); // NOI18N
        btn_salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_salirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_salirMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_salirMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_salirMouseReleased(evt);
            }
        });
        BackGround.add(btn_salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 330, -1, -1));

        txt_titulo.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        txt_titulo.setText("  EDITAR STOCK Y/O PRECIO");
        txt_titulo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                txt_tituloMouseDragged(evt);
            }
        });
        txt_titulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txt_tituloMousePressed(evt);
            }
        });
        BackGround.add(txt_titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 40));

        ClosePanel.setBackground(new java.awt.Color(255, 255, 153));
        ClosePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ClosePanel.setPreferredSize(new java.awt.Dimension(35, 35));

        txt_close.setFont(new java.awt.Font("Roboto Black", 0, 24)); // NOI18N
        txt_close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_close.setText("X");
        txt_close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txt_close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txt_closeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txt_closeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txt_closeMousePressed(evt);
            }
        });

        javax.swing.GroupLayout ClosePanelLayout = new javax.swing.GroupLayout(ClosePanel);
        ClosePanel.setLayout(ClosePanelLayout);
        ClosePanelLayout.setHorizontalGroup(
            ClosePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClosePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txt_close, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        ClosePanelLayout.setVerticalGroup(
            ClosePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClosePanelLayout.createSequentialGroup()
                .addComponent(txt_close, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        BackGround.add(ClosePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 0, 40, 40));

        MinPanel.setBackground(new java.awt.Color(255, 255, 153));
        MinPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        MinPanel.setPreferredSize(new java.awt.Dimension(35, 35));

        txt_minimize.setFont(new java.awt.Font("Roboto Black", 0, 24)); // NOI18N
        txt_minimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_minimize.setText("_");
        txt_minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txt_minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txt_minimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txt_minimizeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txt_minimizeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txt_minimizeMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout MinPanelLayout = new javax.swing.GroupLayout(MinPanel);
        MinPanel.setLayout(MinPanelLayout);
        MinPanelLayout.setHorizontalGroup(
            MinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_minimize, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );
        MinPanelLayout.setVerticalGroup(
            MinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_minimize, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        BackGround.add(MinPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 0, 40, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackGround, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void habilitarCampos(){
        txt_codigoProducto.setText(codigo);
        txt_codigoProducto.setEditable(true);
        chk_precio.setEnabled(true);
        chk_stock.setEnabled(true);
        txt_nuevoPrecio.setEditable(false);
        txt_nuevoStock.setEditable(false);
        cb_Trabajador.setEnabled(true);
        txt_nombreProducto.setEditable(true);
        btn_buscarProducto.setEnabled(true);
        txt_buscarProducto.setEnabled(true);         
    }
    

    
    
    
    private void chk_precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_precioActionPerformed
        if(chk_precio.isSelected()){
            txt_nuevoPrecio.setEditable(true);
            txt_nuevoPrecio.setText(txt_precioActual.getText());
        }
        else{
            txt_nuevoPrecio.setEditable(false);
            txt_nuevoPrecio.setText("");
        }
    }//GEN-LAST:event_chk_precioActionPerformed

    private void txt_nuevoPrecioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nuevoPrecioFocusGained
        if(!txt_nuevoPrecio.getText().equals("") && txt_nuevoPrecio.isEditable()){
            txt_nuevoPrecio.setText("");
        }
    }//GEN-LAST:event_txt_nuevoPrecioFocusGained

    private void txt_nuevoPrecioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nuevoPrecioFocusLost
        if(txt_nuevoPrecio.getText().equals("") && txt_nuevoPrecio.isEditable()){
            txt_nuevoPrecio.setText(txt_precioActual.getText());
        }
        else{
            try{
                String valor = txt_nuevoPrecio.getText().replace("$", "").replace(".", "");
                txt_nuevoPrecio.setText(String.format("$%,d",Integer.valueOf(valor)));  
            }
            catch(Exception e){
                
            }

        }
    }//GEN-LAST:event_txt_nuevoPrecioFocusLost

    private void txt_nuevoPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nuevoPrecioKeyTyped
        onlyNumberField(evt);
    }//GEN-LAST:event_txt_nuevoPrecioKeyTyped

    private void txt_nuevoStockFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nuevoStockFocusGained
        if(!txt_nuevoStock.getText().equals("") && txt_nuevoStock.isEditable()){
            txt_nuevoStock.setText("");
        }
    }//GEN-LAST:event_txt_nuevoStockFocusGained

    private void txt_nuevoStockFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nuevoStockFocusLost
        if(txt_nuevoStock.getText().equals("") && txt_nuevoStock.isEditable()){
            txt_nuevoStock.setText(txt_stockActual.getText());
        }        
    }//GEN-LAST:event_txt_nuevoStockFocusLost

    private void txt_nuevoStockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nuevoStockKeyTyped
        onlyNumberField(evt);
    }//GEN-LAST:event_txt_nuevoStockKeyTyped

    private void chk_stockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_stockActionPerformed
        if(chk_stock.isSelected()){
            txt_nuevoStock.setEditable(true);
            txt_nuevoStock.setText("1");
        }
        else{
            txt_nuevoStock.setEditable(false);
            txt_nuevoStock.setText("");
        }
    }//GEN-LAST:event_chk_stockActionPerformed

    private void lbl_nuevoStockMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_nuevoStockMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_nuevoStockMouseEntered

    private void btn_guardar_CerrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_guardar_CerrarMousePressed

            if(disabled_buttons){    
                ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/guardarycerrar_click.png"));
                btn_guardar_Cerrar.setIcon(botonClick);
                ConProducto cProducto = new ConProducto();
                Producto p = productoGlobal;
                stockActual = txt_stockActual.getText();
                precioAntiguo = txt_precioActual.getText();
                codigo = txt_codigoProducto.getText();
                int nuevoPrecio,nuevoStock;
                boolean continuar = true;
                String mensajeError = "";
                //validar precios
                if(!txt_nuevoPrecio.getText().equals("")){
                    nuevoPrecio = Integer.parseInt(txt_nuevoPrecio.getText().replace(".", "").replace("$", ""));
                    if(nuevoPrecio>0){
                        try {
                            p.setPrecio(nuevoPrecio);
                        } catch (Exception e) {
                            System.out.println(e.getMessage());
                            mensajeError = e.getMessage();                     
                            continuar = false;
                        }
                    }  
                    else{
                        mensajeError = "El precio no puede ser menor o igual a 0";
                        continuar = false;
                    }
                }

                if(!txt_nuevoStock.getText().equals("")){
                    nuevoStock = Integer.parseInt(txt_nuevoStock.getText());
                    if(nuevoStock > 0){
                        try {
                            p.setStock(nuevoStock+productoGlobal.getStock());
                        } catch (Exception e) {
                            mensajeError = e.getMessage();                    
                            continuar = false;
                        }
                    }
                    else{
                        mensajeError = "El stock a agregar debe ser mayor a 0";
                        continuar = false; 
                    }
                }
                
                if(txt_nombreProducto.getText().replace("'","").length() > 0){
                    try {
                        p.setNombre(txt_nombreProducto.getText().replace("'",""));
                    } catch (Exception e) {
                        mensajeError = e.getMessage();
                        continuar = false;
                    }
                }
                
                if(txt_nuevoStock.getText().equals("") && txt_nuevoPrecio.getText().equals("") && txt_nombreProducto.equals(nombreProducto)){
                    continuar = false;
                    mensajeError = "No hay datos modificados";
                }

                if(continuar){
                    productoGlobal = p;
                    ////////////////////////
                    boolean actualizacion = cProducto.actualizarProducto(productoGlobal);    
                    if(actualizacion){                    
                        int id_trabajador = Integer.parseInt(cb_Trabajador.getSelectedItem().toString().split(" - ")[0]);
                        String codigo_barra = codigo;
                        int stock_antiguo = Integer.parseInt(stockActual);

                        int stock_agregado = 0;
                        if(!txt_nuevoStock.getText().equals("")){
                            stock_agregado = Integer.parseInt(txt_nuevoStock.getText());
                        }

                        int precio_antiguo = Integer.parseInt(precioAntiguo.replace("$", "").replace(".", ""));
                        int precio_nuevo = precio_antiguo;
                        if(!txt_nuevoPrecio.getText().equals("")){
                            precio_nuevo = Integer.parseInt(txt_nuevoPrecio.getText().replace("$", "").replace(".", ""));
                        }

                        LogStockPrecio log = new LogStockPrecio(id_trabajador, codigo_barra, stock_antiguo, stock_agregado, precio_antiguo, precio_nuevo);
                        ConLogStockPrecio cLog = new ConLogStockPrecio();
                        cLog.RegistrarLog(log);
                        JOptionPane.showMessageDialog(this, "Datos actualizados", "Actualizacion exitosa", JOptionPane.INFORMATION_MESSAGE);  
                        this.dispose();

                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Hubo un problema y no se pudo realizar la actualizacion","Operacion fallida",JOptionPane.ERROR_MESSAGE);
                        habilitarCampos();
                    }    
                    /////////////////////////
                    

                   

                }
                else{
                    JOptionPane.showMessageDialog(this, mensajeError,"Operacion fallida", JOptionPane.ERROR_MESSAGE);
                    habilitarCampos();
                    
                }

            }
            

    }//GEN-LAST:event_btn_guardar_CerrarMousePressed

    private void btn_guardar_CerrarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_guardar_CerrarMouseReleased
        if(disabled_buttons){    
            ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/guardarycerrar_solid.png"));
            btn_guardar_Cerrar.setIcon(botonClick);
        }
    }//GEN-LAST:event_btn_guardar_CerrarMouseReleased

    private void btn_guardar_CerrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_guardar_CerrarMouseEntered
        if(disabled_buttons){    
            ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/guardarycerrar_click.png"));
            btn_guardar_Cerrar.setIcon(botonClick);
        }
    }//GEN-LAST:event_btn_guardar_CerrarMouseEntered

    private void btn_guardar_CerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_guardar_CerrarMouseExited
        if(disabled_buttons){    
            ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/guardarycerrar_solid.png"));
            btn_guardar_Cerrar.setIcon(botonClick);
        }
    }//GEN-LAST:event_btn_guardar_CerrarMouseExited

    private void btn_guardar_continuarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_guardar_continuarMouseEntered
        if(disabled_buttons){
            ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/guardaryotro_click.png"));
            btn_guardar_continuar.setIcon(botonClick); 
        }
    }//GEN-LAST:event_btn_guardar_continuarMouseEntered

    private void btn_guardar_continuarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_guardar_continuarMouseExited
        if(disabled_buttons){
            ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/guardaryotro_solid.png"));
            btn_guardar_continuar.setIcon(botonClick); 
        }
    }//GEN-LAST:event_btn_guardar_continuarMouseExited

    private void btn_guardar_continuarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_guardar_continuarMousePressed
        
        
            if(disabled_buttons){    
                ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/guardaryotro_click.png"));
                btn_guardar_continuar.setIcon(botonClick);            
                ConProducto cProducto = new ConProducto();
                Producto p = productoGlobal;
                stockActual = txt_stockActual.getText();
                precioAntiguo = txt_precioActual.getText();
                codigo = txt_codigoProducto.getText();
                int nuevoPrecio,nuevoStock;
                boolean continuar = true;
                String mensajeError = "";
                //validar precios
                if(!txt_nuevoPrecio.getText().equals("")){
                    nuevoPrecio = Integer.parseInt(txt_nuevoPrecio.getText().replace(".", "").replace("$", ""));
                    if(nuevoPrecio>0){
                        try {
                            p.setPrecio(nuevoPrecio);
                        } catch (Exception e) {
                            System.out.println(e.getMessage());
                            mensajeError = e.getMessage();                     
                            continuar = false;
                        }
                    }  
                    else{
                        mensajeError = "El precio no puede ser menor o igual a 0";
                        continuar = false;
                    }
                }

                if(!txt_nuevoStock.getText().equals("")){
                    nuevoStock = Integer.parseInt(txt_nuevoStock.getText());
                    if(nuevoStock > 0){
                        try {
                            p.setStock(nuevoStock+productoGlobal.getStock());
                        } catch (Exception e) {
                            mensajeError = e.getMessage();                    
                            continuar = false;
                        }
                    }
                    else{
                        mensajeError = "El stock a agregar debe ser mayor a 0";
                        continuar = false; 
                    }
                }
                if(txt_nombreProducto.getText().replace("'","").length() > 0){
                    try {
                        p.setNombre(txt_nombreProducto.getText().replace("'",""));
                    } catch (Exception e) {
                        mensajeError = e.getMessage();
                        continuar = false;
                    }
                }
                if(txt_nuevoStock.getText().equals("") && txt_nuevoPrecio.getText().equals("") && txt_nombreProducto.getText().equals(nombreProducto)){
                    continuar = false;
                    mensajeError = "No hay datos modificados";
                }

                if(continuar){
                    
                    productoGlobal = p;
                    /////////////////
                    
                    boolean actualizacion = cProducto.actualizarProducto(productoGlobal);    
                    if(actualizacion){                    
                        int id_trabajador = Integer.parseInt(cb_Trabajador.getSelectedItem().toString().split(" - ")[0]);
                        String codigo_barra = codigo;
                        int stock_antiguo = Integer.parseInt(stockActual);

                        int stock_agregado = 0;
                        if(!txt_nuevoStock.getText().equals("")){
                            stock_agregado = Integer.parseInt(txt_nuevoStock.getText());
                        }

                        int precio_antiguo = Integer.parseInt(precioAntiguo.replace("$", "").replace(".", ""));
                        int precio_nuevo = precio_antiguo;
                        if(!txt_nuevoPrecio.getText().equals("")){
                            precio_nuevo = Integer.parseInt(txt_nuevoPrecio.getText().replace("$", "").replace(".", ""));
                        }

                        LogStockPrecio log = new LogStockPrecio(id_trabajador, codigo_barra, stock_antiguo, stock_agregado, precio_antiguo, precio_nuevo);
                        ConLogStockPrecio cLog = new ConLogStockPrecio();
                        cLog.RegistrarLog(log);
                        /////////////////
                        JOptionPane.showMessageDialog(this, "Datos actualizados", "Actualizacion exitosa", JOptionPane.INFORMATION_MESSAGE); 
                        limpiarCampos();                
                        habilitarCampos();
                        txt_codigoProducto.setText("");
                        txt_nombreProducto.setEditable(false);

                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Hubo un problema y no se pudo realizar la actualizacion","Operacion fallida",JOptionPane.ERROR_MESSAGE);
                        habilitarCampos();
                    }  
                    
                    
                    
                        

                    
                    

                }
                else{
                    JOptionPane.showMessageDialog(this, mensajeError,"Operacion fallida", JOptionPane.ERROR_MESSAGE);
                    habilitarCampos();
                }
            }

                
    }//GEN-LAST:event_btn_guardar_continuarMousePressed

    private void btn_guardar_continuarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_guardar_continuarMouseReleased
        if(disabled_buttons){
            ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/guardaryotro_solid.png"));
            btn_guardar_continuar.setIcon(botonClick); 
        }
    }//GEN-LAST:event_btn_guardar_continuarMouseReleased

    private void btn_limpiartodoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_limpiartodoMouseEntered
    if(!disabled_buttons){
            ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/limpiar_click.png"));
            btn_limpiartodo.setIcon(botonClick);    
    }
    }//GEN-LAST:event_btn_limpiartodoMouseEntered

    private void btn_limpiartodoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_limpiartodoMouseExited
    if(!disabled_buttons){
            ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/limpiar_solid.png"));
            btn_limpiartodo.setIcon(botonClick);    
    }
    }//GEN-LAST:event_btn_limpiartodoMouseExited

    private void btn_limpiartodoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_limpiartodoMousePressed
    if(!disabled_buttons){
            ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/limpiar_click.png"));
            btn_limpiartodo.setIcon(botonClick);    
            limpiarCampos();
    }
    }//GEN-LAST:event_btn_limpiartodoMousePressed

    private void btn_limpiartodoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_limpiartodoMouseReleased
    if(!disabled_buttons){
            ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/limpiar_solid.png"));
            btn_limpiartodo.setIcon(botonClick);    
    }
    }//GEN-LAST:event_btn_limpiartodoMouseReleased

    private void btn_salirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_salirMouseEntered
        ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/salir_click.png"));
        btn_salir.setIcon(botonClick);
    }//GEN-LAST:event_btn_salirMouseEntered

    private void btn_salirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_salirMouseExited
        ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/salir_solid.png"));
        btn_salir.setIcon(botonClick);
    }//GEN-LAST:event_btn_salirMouseExited

    private void btn_salirMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_salirMousePressed
        ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/salir_click.png"));
        btn_salir.setIcon(botonClick);
        this.dispose();
    }//GEN-LAST:event_btn_salirMousePressed

    private void btn_salirMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_salirMouseReleased
        ImageIcon botonClick = new ImageIcon(getClass().getResource("/img/custom buttons/salir_solid.png"));
        btn_salir.setIcon(botonClick);
    }//GEN-LAST:event_btn_salirMouseReleased

    private void txt_codigoProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codigoProductoActionPerformed

            
        if(!disabled_buttons){    
            ConProducto cProducto = new ConProducto();
            Producto p = cProducto.obtenerProducto(txt_codigoProducto.getText());
            productoGlobal = p;
            if(!p.getNombre().equals("")){
                chk_precio.setSelected(false);
                txt_nuevoPrecio.setEditable(false);
                txt_nuevoPrecio.setText("");
                chk_stock.setSelected(false);
                txt_nuevoStock.setEditable(false);
                txt_nuevoStock.setText("");
                cb_Trabajador.setEnabled(true);
                txt_nombreProducto.setEditable(true);

                txt_nombreProducto.setText(p.getNombre());
                nombreProducto = p.getNombre();
                txt_precioActual.setText(String.valueOf(p.getPrecio()));
                if(txt_precioActual.getText().equals("")) txt_precioActual.setText("$0");
                else{
                    String valor = txt_precioActual.getText().replace("$", "").replace(".", "");
                    txt_precioActual.setText(String.format("$%,d",Integer.valueOf(valor)));
                }
                txt_stockActual.setText(String.valueOf(p.getStock()));
                chk_precio.setEnabled(true);
                chk_stock.setEnabled(true);
                codigo = txt_codigoProducto.getText();
            }
            else{
                codigo = txt_codigoProducto.getText();
                limpiarCampos();
                txt_codigoProducto.setText(codigo);
                JOptionPane.showMessageDialog(this, "No existe un producto asociado al codigo "+codigo,"Error obteniendo producto",JOptionPane.ERROR_MESSAGE);            
            }

        }

    }//GEN-LAST:event_txt_codigoProductoActionPerformed

    private void txt_tituloMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_tituloMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_txt_tituloMouseDragged

    private void txt_tituloMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_tituloMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_txt_tituloMousePressed

    private void txt_closeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_closeMouseEntered
        ClosePanel.setBackground(Color.RED);
        txt_close.setForeground(Color.WHITE);
    }//GEN-LAST:event_txt_closeMouseEntered

    private void txt_closeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_closeMouseExited
        ClosePanel.setBackground(BackgroundColor);
        txt_close.setForeground(Color.BLACK);
    }//GEN-LAST:event_txt_closeMouseExited

    private void txt_closeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_closeMousePressed
        Color DarkRed = new Color(146, 55, 77);
        ClosePanel.setBackground(DarkRed);
        txt_close.setForeground(Color.WHITE);
        this.dispose();
    }//GEN-LAST:event_txt_closeMousePressed

    private void txt_minimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_minimizeMouseEntered
        MinPanel.setBackground(mouseEnterPanelColor);
        txt_minimize.setForeground(Color.WHITE);
    }//GEN-LAST:event_txt_minimizeMouseEntered

    private void txt_minimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_minimizeMouseExited
        MinPanel.setBackground(BackgroundColor);
        txt_minimize.setForeground(Color.BLACK);
    }//GEN-LAST:event_txt_minimizeMouseExited

    private void txt_minimizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_minimizeMousePressed
        MinPanel.setBackground(mouseClickPanelColor);
        txt_minimize.setForeground(Color.WHITE);
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_txt_minimizeMousePressed

    private void txt_minimizeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_minimizeMouseReleased
        MinPanel.setBackground(BackgroundColor);
        txt_minimize.setForeground(Color.BLACK);
    }//GEN-LAST:event_txt_minimizeMouseReleased

    private void txt_confirmarInformacionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_confirmarInformacionMouseEntered
        if(btn_confirmarInformacion.isEnabled())
            btn_confirmarInformacion.setBackground(mouseEnterPanelColor);
    }//GEN-LAST:event_txt_confirmarInformacionMouseEntered

    private void txt_confirmarInformacionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_confirmarInformacionMouseExited
        if(btn_confirmarInformacion.isEnabled())
            btn_confirmarInformacion.setBackground(mouseExitPanelColor);
    }//GEN-LAST:event_txt_confirmarInformacionMouseExited

    private void txt_confirmarInformacionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_confirmarInformacionMouseReleased
         if(btn_confirmarInformacion.isEnabled())
            btn_confirmarInformacion.setBackground(mouseExitPanelColor);
    }//GEN-LAST:event_txt_confirmarInformacionMouseReleased

    private void txt_confirmarInformacionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_confirmarInformacionMousePressed
         if(btn_confirmarInformacion.isEnabled()){
                if(evt.getButton() == 1){
                    if(codigo.length()>0 && txt_nombreProducto.getText().replace("'", "").length()>0 && txt_precioActual.getText().length()>0 && txt_stockActual.getText().length()>0){
                                    txt_codigoProducto.setText(codigo);
                                    txt_nombreProducto.setEditable(false);
                                    txt_codigoProducto.setEditable(false);
                                    chk_precio.setEnabled(false);
                                    chk_stock.setEnabled(false);
                                    txt_nuevoPrecio.setEditable(false);
                                    txt_nuevoStock.setEditable(false);
                                    cb_Trabajador.setEnabled(false);
                                    btn_confirmarInformacion.setEnabled(false);
                                    txt_confirmarInformacion.setEnabled(false);
                                    btn_buscarProducto.setEnabled(false);
                                    txt_buscarProducto.setEnabled(false);
                                    btn_buscarProducto.setBackground(Color.LIGHT_GRAY);
                                    btn_confirmarInformacion.setBackground(Color.LIGHT_GRAY);
                                }
                    else{
                        JOptionPane.showMessageDialog(this, "No hay un producto cargado para editar","Error con datos de producto",JOptionPane.ERROR_MESSAGE);
                    }            
                }
         }
    }//GEN-LAST:event_txt_confirmarInformacionMousePressed

    private void txt_buscarProductoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_buscarProductoMouseEntered
        if(btn_buscarProducto.isEnabled())
            btn_buscarProducto.setBackground(mouseEnterPanelColor);
    }//GEN-LAST:event_txt_buscarProductoMouseEntered

    private void txt_buscarProductoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_buscarProductoMouseExited
        if(btn_buscarProducto.isEnabled())
            btn_buscarProducto.setBackground(mouseExitPanelColor);
    }//GEN-LAST:event_txt_buscarProductoMouseExited

    private void txt_buscarProductoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_buscarProductoMouseReleased
        if(btn_buscarProducto.isEnabled())
            btn_buscarProducto.setBackground(mouseExitPanelColor);
    }//GEN-LAST:event_txt_buscarProductoMouseReleased

    private void txt_buscarProductoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_buscarProductoMousePressed
        if(btn_buscarProducto.isEnabled()){
            btn_buscarProducto.setBackground(mouseClickPanelColor);
            ConProducto cProducto = new ConProducto();
            Producto p = cProducto.obtenerProducto(txt_codigoProducto.getText());
            productoGlobal = p;
            if(!p.getNombre().equals("")){
                chk_precio.setSelected(false);
                txt_nuevoPrecio.setEditable(false);
                txt_nuevoPrecio.setText("");
                chk_stock.setSelected(false);
                txt_nuevoStock.setEditable(false);
                txt_nuevoStock.setText("");
                cb_Trabajador.setEnabled(true);

                txt_nombreProducto.setEditable(true);

                txt_nombreProducto.setText(p.getNombre());
                nombreProducto = p.getNombre();
                txt_precioActual.setText(String.valueOf(p.getPrecio()));
                if(txt_precioActual.getText().equals("")) txt_precioActual.setText("$0");
                else{
                    String valor = txt_precioActual.getText().replace("$", "").replace(".", "");
                    txt_precioActual.setText(String.format("$%,d",Integer.valueOf(valor)));
                }
                txt_stockActual.setText(String.valueOf(p.getStock()));
                chk_precio.setEnabled(true);
                chk_stock.setEnabled(true);
                codigo = txt_codigoProducto.getText();
            }
            else{
                codigo = txt_codigoProducto.getText();
                limpiarCampos();
                txt_codigoProducto.setText(codigo);
                JOptionPane.showMessageDialog(this, "No existe un producto asociado al codigo "+codigo,"Error obteniendo producto",JOptionPane.ERROR_MESSAGE);            
            }
        }
            
    }//GEN-LAST:event_txt_buscarProductoMousePressed
    
    private void onlyNumberField(java.awt.event.KeyEvent evt){
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }
    

    private void limpiarCampos(){
        txt_codigoProducto.setText("");
        txt_nombreProducto.setText("");
        txt_precioActual.setText("");
        txt_stockActual.setText("");
        chk_precio.setSelected(false);
        txt_nuevoPrecio.setEditable(false);
        txt_nuevoPrecio.setText("");
        chk_stock.setSelected(false);
        txt_nuevoStock.setEditable(false);
        txt_nuevoStock.setText("");
        
        chk_precio.setEnabled(false);
        chk_stock.setEnabled(false);
        cb_Trabajador.setEnabled(false);
        productoGlobal = new Producto();
    }
    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarStockPrecio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarStockPrecio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarStockPrecio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarStockPrecio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarStockPrecio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BackGround;
    private javax.swing.JPanel ClosePanel;
    private javax.swing.JPanel MinPanel;
    private javax.swing.JPanel PanelDetalle;
    private javax.swing.JPanel btn_buscarProducto;
    private javax.swing.JPanel btn_confirmarInformacion;
    private javax.swing.JLabel btn_guardar_Cerrar;
    private javax.swing.JLabel btn_guardar_continuar;
    private javax.swing.JLabel btn_limpiartodo;
    private javax.swing.JLabel btn_salir;
    private javax.swing.JComboBox<String> cb_Trabajador;
    private javax.swing.JCheckBox chk_precio;
    private javax.swing.JCheckBox chk_stock;
    private javax.swing.JLabel lbl_codigoProducto;
    private javax.swing.JLabel lbl_nombreProducto;
    private javax.swing.JLabel lbl_nuevoPrecio;
    private javax.swing.JLabel lbl_nuevoStock;
    private javax.swing.JLabel lbl_precioActual;
    private javax.swing.JLabel lbl_quienModifica;
    private javax.swing.JLabel lbl_stockActual;
    private javax.swing.JLabel txt_buscarProducto;
    private javax.swing.JLabel txt_close;
    private javax.swing.JTextField txt_codigoProducto;
    private javax.swing.JLabel txt_confirmarInformacion;
    private javax.swing.JLabel txt_minimize;
    private javax.swing.JTextField txt_nombreProducto;
    private javax.swing.JTextField txt_nuevoPrecio;
    private javax.swing.JTextField txt_nuevoStock;
    private javax.swing.JTextField txt_precioActual;
    private javax.swing.JTextField txt_stockActual;
    private javax.swing.JLabel txt_titulo;
    // End of variables declaration//GEN-END:variables
}
